generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  disabled          Boolean?
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@index([resource_id], map: "sso_providers_resource_id_pattern_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model users {
  instance_id                                String?                           @db.Uuid
  id                                         String                            @id @db.Uuid
  aud                                        String?                           @db.VarChar(255)
  role                                       String?                           @db.VarChar(255)
  email                                      String?                           @db.VarChar(255)
  encrypted_password                         String?                           @db.VarChar(255)
  email_confirmed_at                         DateTime?                         @db.Timestamptz(6)
  invited_at                                 DateTime?                         @db.Timestamptz(6)
  confirmation_token                         String?                           @db.VarChar(255)
  confirmation_sent_at                       DateTime?                         @db.Timestamptz(6)
  recovery_token                             String?                           @db.VarChar(255)
  recovery_sent_at                           DateTime?                         @db.Timestamptz(6)
  email_change_token_new                     String?                           @db.VarChar(255)
  email_change                               String?                           @db.VarChar(255)
  email_change_sent_at                       DateTime?                         @db.Timestamptz(6)
  last_sign_in_at                            DateTime?                         @db.Timestamptz(6)
  raw_app_meta_data                          Json?
  raw_user_meta_data                         Json?
  is_super_admin                             Boolean?
  created_at                                 DateTime?                         @db.Timestamptz(6)
  updated_at                                 DateTime?                         @db.Timestamptz(6)
  phone                                      String?                           @unique
  phone_confirmed_at                         DateTime?                         @db.Timestamptz(6)
  phone_change                               String?                           @default("")
  phone_change_token                         String?                           @default("") @db.VarChar(255)
  phone_change_sent_at                       DateTime?                         @db.Timestamptz(6)
  confirmed_at                               DateTime?                         @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current                 String?                           @default("") @db.VarChar(255)
  email_change_confirm_status                Int?                              @default(0) @db.SmallInt
  banned_until                               DateTime?                         @db.Timestamptz(6)
  reauthentication_token                     String?                           @default("") @db.VarChar(255)
  reauthentication_sent_at                   DateTime?                         @db.Timestamptz(6)
  is_sso_user                                Boolean                           @default(false)
  deleted_at                                 DateTime?                         @db.Timestamptz(6)
  is_anonymous                               Boolean                           @default(false)
  identities                                 identities[]
  mfa_factors                                mfa_factors[]
  one_time_tokens                            one_time_tokens[]
  sessions                                   sessions[]
  account_invitations                        account_invitations[]
  account_users                              account_users[]
  accounts                                   accounts[]
  admins                                     admins?
  ai_usage                                   ai_usage[]
  announcements                              announcements[]
  article_revisions                          article_revisions[]
  articles_articles_created_byTousers        articles[]                        @relation("articles_created_byTousers")
  articles_articles_updated_byTousers        articles[]                        @relation("articles_updated_byTousers")
  audit_logs                                 audit_logs[]
  billing_audit_log                          billing_audit_log[]
  comment_reactions                          comment_reactions[]
  community_profiles                         community_profiles?
  contacts                                   contacts[]
  critical_function_errors                   critical_function_errors[]
  critical_function_successes                critical_function_successes[]
  email_domain_policies                      email_domain_policies[]
  faqs_faqs_created_byTousers                faqs[]                            @relation("faqs_created_byTousers")
  faqs_faqs_updated_byTousers                faqs[]                            @relation("faqs_updated_byTousers")
  feedback                                   feedback[]
  google_api_rate_limits                     google_api_rate_limits[]
  google_business_locations                  google_business_locations[]
  google_business_media_uploads              google_business_media_uploads[]
  google_business_profiles                   google_business_profiles?
  google_business_scheduled_posts            google_business_scheduled_posts[]
  media_assets                               media_assets[]
  mentions_mentions_author_idTousers         mentions[]                        @relation("mentions_author_idTousers")
  mentions_mentions_mentioned_user_idTousers mentions[]                        @relation("mentions_mentioned_user_idTousers")
  post_comments                              post_comments[]
  post_reactions                             post_reactions[]
  posts                                      posts[]
  quotes                                     quotes[]
  review_reminder_logs                       review_reminder_logs[]
  review_reminder_settings                   review_reminder_settings?
  selected_gbp_locations                     selected_gbp_locations[]

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model account_invitations {
  id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_id        String              @db.Uuid
  email             String
  role              String              @default("member")
  invited_by        String              @db.Uuid
  token             String              @unique
  expires_at        DateTime            @db.Timestamptz(6)
  accepted_at       DateTime?           @db.Timestamptz(6)
  created_at        DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?           @default(now()) @db.Timestamptz(6)
  accounts          accounts            @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users             users               @relation(fields: [invited_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  invitation_events invitation_events[]

  @@unique([account_id, email])
  @@index([account_id], map: "idx_account_invitations_account_id")
  @@index([email], map: "idx_account_invitations_email")
  @@index([expires_at], map: "idx_account_invitations_expires_at")
  @@index([token], map: "idx_account_invitations_token")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model account_users {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_id    String    @db.Uuid
  user_id       String    @db.Uuid
  role          String?   @default("member")
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  user_email    String?
  business_name String?
  account_name  String?
  accounts      accounts  @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users         users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, account_id], map: "account_users_unique_user_account")
  @@unique([user_id, account_id], map: "unique_user_account")
  @@index([account_id], map: "idx_account_users_account_id")
  @@index([business_name], map: "idx_account_users_business_name")
  @@index([role], map: "idx_account_users_role")
  @@index([user_id, account_id], map: "idx_account_users_user_account")
  @@index([user_email], map: "idx_account_users_user_email")
  @@index([user_id], map: "idx_account_users_user_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model accounts {
  id                              String                            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  plan                            String                            @default("no_plan")
  trial_start                     DateTime?                         @db.Timestamptz(6)
  trial_end                       DateTime?                         @db.Timestamptz(6)
  is_free_account                 Boolean?                          @default(false)
  custom_prompt_page_count        Int?                              @default(0)
  contact_count                   Int?                              @default(0)
  created_at                      DateTime?                         @default(now()) @db.Timestamptz(6)
  updated_at                      DateTime?                         @default(now()) @db.Timestamptz(6)
  business_name                   String?
  first_name                      String?
  last_name                       String?
  stripe_customer_id              String?
  stripe_subscription_id          String?
  subscription_status             String?
  has_had_paid_plan               Boolean                           @default(false)
  email                           String?
  plan_lookup_key                 String?
  review_notifications_enabled    Boolean?                          @default(true)
  user_id                         String?                           @db.Uuid
  max_users                       Int?                              @default(1)
  location_count                  Int?                              @default(0)
  max_locations                   Int?                              @default(0)
  deleted_at                      DateTime?                         @db.Timestamptz(6)
  is_admin                        Boolean?                          @default(false)
  free_plan_level                 String?
  promotion_code                  String?
  max_contacts                    Int?                              @default(0)
  max_prompt_pages                Int?                              @default(3)
  prompt_page_count               Int?                              @default(0)
  reactivated_at                  DateTime?                         @db.Timestamptz(6)
  reactivation_count              Int?                              @default(0)
  last_cancellation_reason        String?
  onboarding_step                 String?                           @default("incomplete")
  business_creation_complete      Boolean?                          @default(false)
  billing_period                  String?                           @default("monthly")
  max_gbp_locations               Int?                              @default(5)
  email_review_notifications      Boolean?                          @default(true)
  gbp_insights_enabled            Boolean?                          @default(true)
  is_additional_account           Boolean?                          @default(false)
  had_paid_plan                   Boolean?                          @default(false)
  created_by_user_id              String?                           @db.Uuid
  created_by                      String?                           @db.Uuid
  account_events                  account_events[]
  account_invitations             account_invitations[]
  account_users                   account_users[]
  users                           users?                            @relation(fields: [created_by], references: [id], onUpdate: NoAction)
  audit_logs                      audit_logs[]
  billing_audit_log               billing_audit_log[]
  business_locations              business_locations[]
  businesses                      businesses[]
  communication_records           communication_records[]
  communication_templates         communication_templates[]
  email_domain_policies           email_domain_policies[]
  follow_up_reminders             follow_up_reminders[]
  google_business_scheduled_posts google_business_scheduled_posts[]
  onboarding_tasks                onboarding_tasks[]
  prompt_pages                    prompt_pages[]
  review_reminder_logs            review_reminder_logs[]
  review_share_events             review_share_events[]
  review_share_images             review_share_images[]
  selected_gbp_locations          selected_gbp_locations[]
  trial_reminder_logs             trial_reminder_logs[]
  widgets                         widgets[]

  @@index([created_at], map: "idx_accounts_created_at")
  @@index([created_by], map: "idx_accounts_created_by")
  @@index([deleted_at], map: "idx_accounts_deleted_at")
  @@index([onboarding_step], map: "idx_accounts_onboarding_step")
  @@index([plan], map: "idx_accounts_plan")
  @@index([plan, trial_end], map: "idx_accounts_plan_trial_end")
  @@index([trial_end], map: "idx_accounts_trial_end")
  @@index([billing_period], map: "idx_accounts_billing_period")
  @@index([id], map: "idx_accounts_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model account_events {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_id String?   @db.Uuid
  event_type String
  event_data Json?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  accounts   accounts? @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([account_id], map: "idx_account_events_account")
  @@index([event_type], map: "idx_account_events_type")
  @@index([created_at(sort: Desc)], map: "idx_account_events_created")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model admins {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_id String    @unique @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  users      users     @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([account_id], map: "idx_admins_account_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ai_usage {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id           String?   @db.Uuid
  prompt_tokens     Int?
  completion_tokens Int?
  total_tokens      Int?
  cost_usd          Decimal?  @db.Decimal
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  users             users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_ai_usage_user_id")

  @@index([created_at], map: "idx_ai_usage_created_at")
  @@index([user_id], map: "idx_ai_usage_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model analytics_events {
  id             String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  prompt_page_id String?       @db.Uuid
  event_type     String
  created_at     DateTime?     @default(now()) @db.Timestamptz(6)
  metadata       Json?         @default("{}")
  platform       String?
  session_id     String?
  user_agent     String?
  ip_address     String?
  prompt_pages   prompt_pages? @relation(fields: [prompt_page_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_analytics_events_created_at")
  @@index([event_type], map: "idx_analytics_events_event_type")
  @@index([metadata], map: "idx_analytics_events_metadata", type: Gin)
  @@index([platform], map: "idx_analytics_events_platform")
  @@index([prompt_page_id], map: "idx_analytics_events_prompt_page_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model announcements {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  message     String
  is_active   Boolean?  @default(true)
  created_by  String?   @db.Uuid
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  button_text String?
  button_url  String?
  users       users?    @relation(fields: [created_by], references: [id], onUpdate: NoAction)

  @@index([is_active], map: "idx_announcements_active")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_logs {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_id     String?   @db.Uuid
  user_id        String?   @db.Uuid
  event_type     String
  event_category String
  resource_type  String?
  resource_id    String?   @db.Uuid
  details        Json?     @default("{}")
  ip_address     String?   @db.Inet
  user_agent     String?
  success        Boolean?  @default(true)
  error_message  String?
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  accounts       accounts? @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users          users?    @relation(fields: [user_id], references: [id], onUpdate: NoAction)

  @@index([account_id], map: "idx_audit_logs_account_id")
  @@index([created_at], map: "idx_audit_logs_created_at")
  @@index([event_category], map: "idx_audit_logs_event_category")
  @@index([event_type], map: "idx_audit_logs_event_type")
  @@index([resource_type, resource_id], map: "idx_audit_logs_resource")
  @@index([user_id], map: "idx_audit_logs_user_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model business_locations {
  id                                                                 String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_id                                                         String         @db.Uuid
  name                                                               String
  business_name                                                      String?
  address_street                                                     String?
  address_city                                                       String?
  address_state                                                      String?
  address_zip                                                        String?
  address_country                                                    String?
  business_description                                               String?
  unique_aspects                                                     String?
  phone                                                              String?
  email                                                              String?
  website_url                                                        String?
  ai_dos                                                             String?
  ai_donts                                                           String?
  review_platforms                                                   Json?
  logo_url                                                           String?
  hours                                                              String?
  manager_name                                                       String?
  manager_email                                                      String?
  parking_info                                                       String?
  accessibility_info                                                 String?
  primary_color                                                      String?
  secondary_color                                                    String?
  custom_css                                                         String?
  is_active                                                          Boolean?       @default(true)
  created_at                                                         DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at                                                         DateTime?      @default(now()) @db.Timestamptz(6)
  emoji_sentiment_enabled                                            Boolean?       @default(false)
  emoji_sentiment_question                                           String?        @default("How was your experience?")
  emoji_feedback_message                                             String?        @default("How can we improve?")
  emoji_thank_you_message                                            String?        @default("Thank you for your feedback. It's important to us.")
  emoji_labels                                                       String[]       @default(["Excellent", "Satisfied", "Neutral", "Unsatisfied", "Frustrated"])
  falling_enabled                                                    Boolean?       @default(true)
  falling_icon                                                       String?        @default("star")
  offer_enabled                                                      Boolean?       @default(false)
  offer_title                                                        String?        @default("")
  offer_body                                                         String?        @default("")
  offer_url                                                          String?        @default("")
  ai_review_enabled                                                  Boolean?       @default(true)
  show_friendly_note                                                 Boolean?       @default(false)
  friendly_note                                                      String?        @default("")
  emoji_feedback_popup_header                                        String?        @default("How can we Improve?")
  emoji_feedback_page_header                                         String?        @default("Your feedback helps us grow")
  location_photo_url                                                 String?
  falling_icon_color                                                 String?        @default("#fbbf24")
  prompt_page_slug                                                   String?
  prompt_page_id                                                     String?        @db.Uuid
  kickstarters_enabled                                               Boolean?
  selected_kickstarters                                              Json?
  kickstarters_background_design                                     Boolean?       @default(false)
  recent_reviews_enabled                                             Boolean?
  offer_timelock                                                     Boolean?       @default(false)
  custom_kickstarters                                                Json?
  accounts                                                           accounts       @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  prompt_pages_business_locations_prompt_page_idToprompt_pages       prompt_pages?  @relation("business_locations_prompt_page_idToprompt_pages", fields: [prompt_page_id], references: [id], onUpdate: NoAction)
  prompt_pages_prompt_pages_business_location_idTobusiness_locations prompt_pages[] @relation("prompt_pages_business_location_idTobusiness_locations")

  @@index([account_id, id], map: "idx_business_locations_account")
  @@index([account_id], map: "idx_business_locations_account_id")
  @@index([account_id, is_active], map: "idx_business_locations_active")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model businesses {
  id                             String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                           String
  created_at                     DateTime             @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  updated_at                     DateTime             @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  facebook_url                   String?
  instagram_url                  String?
  bluesky_url                    String?
  tiktok_url                     String?
  youtube_url                    String?
  linkedin_url                   String?
  pinterest_url                  String?
  primary_font                   String?              @default("Inter")
  secondary_font                 String?              @default("Inter")
  primary_color                  String?              @default("#4F46E5")
  secondary_color                String?              @default("#818CF8")
  background_color               String?              @default("#FFFFFF")
  text_color                     String?              @default("#1F2937")
  address_street                 String?
  address_city                   String?
  address_state                  String?
  address_zip                    String?
  address_country                String?
  offer_url                      String?
  background_type                String?              @default("gradient")
  gradient_start                 String?              @default("#4F46E5")
  gradient_middle                String?              @default("#818CF8")
  gradient_end                   String?              @default("#C7D2FE")
  offer_learn_more_url           String?
  default_offer_enabled          Boolean?             @default(false)
  default_offer_title            String?              @default("Special Offer")
  default_offer_body             String?
  account_id                     String               @db.Uuid
  card_inner_shadow              Boolean?             @default(false)
  card_shadow_color              String?              @default("#222222")
  card_shadow_intensity          Decimal?             @default(0.20) @db.Decimal(3, 2)
  card_transparency              Decimal?             @default(1.00) @db.Decimal(3, 2)
  logo_print_url                 String?
  about_us                       String?
  kickstarters_enabled           Boolean?             @default(false)
  selected_kickstarters          Json?                @default("[]")
  kickstarters_background_design Boolean?             @default(false)
  ai_dos                         String?
  ai_donts                       String?
  taglines                       String?
  team_info                      String?
  review_platforms               Json?
  platform_word_counts           String?
  logo_url                       String?
  keywords                       String[]                  @default([])
  tagline                        String?
  business_website               String?
  phone                          String?
  signup_email                   String?
  business_email                 String?
  default_offer_url              String?
  industries_other               String?
  industry                       String[]
  services_offered               Json?
  company_values                 String?
  differentiators                String?
  years_in_business              String?
  industries_served              String?
  card_bg                        String?
  card_text                      String?
  default_recent_reviews_enabled Boolean?             @default(false)
  emoji_sentiment_enabled        Boolean?             @default(false)
  emoji_sentiment_question       String?              @default("How was your experience?")
  emoji_feedback_message         String?              @default("Please tell us more about your experience")
  emoji_thank_you_message        String?              @default("Thank you for your feedback!")
  emoji_feedback_popup_header    String?              @default("")
  emoji_feedback_page_header     String?              @default("")
  falling_enabled                Boolean?             @default(true)
  falling_icon                   String?              @default("star")
  falling_icon_color             String?              @default("#FFD700")
  show_friendly_note             Boolean?             @default(false)
  friendly_note                  String?              @default("")
  recent_reviews_enabled         Boolean?             @default(false)
  recent_reviews_scope           String?              @default("current_page")
  ai_button_enabled              Boolean?             @default(false)
  fix_grammar_enabled            Boolean?             @default(false)
  default_offer_timelock         Boolean?             @default(false)
  recent_reviews_count           Int?                 @default(5)
  falling_stars_theme            String?              @default("default")
  personalized_note_enabled      Boolean?             @default(false)
  personalized_note_text         String?              @default("")
  falling_stars_enabled          Boolean?             @default(false)
  emoji_sentiment_selected       Json?                @default("[]")
  custom_kickstarters            Json?                @default("[]")
  card_backdrop_blur             Int?                 @default(0)
  card_border_width              Decimal?             @default(0) @db.Decimal(3, 1)
  card_border_color              String?              @default("rgba(255, 255, 255, 0.2)")
  card_glassmorphism             Boolean?             @default(false)
  card_border_transparency       Decimal?             @default(1.00) @db.Decimal(3, 2)
  card_placeholder_color         String?              @default("#9CA3AF")
  referral_source                String?              @db.VarChar(50)
  referral_source_other          String?
  kickstarters_accent_color      String?
  input_text_color               String?              @default("#1F2937")
  style_preset                   String?
  accounts                       accounts             @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_businesses_account_id")
  review_submissions             review_submissions[]

  @@index([account_id], map: "idx_businesses_account_id")
  @@index([account_id, name], map: "idx_businesses_account_name")
  @@index([created_at], map: "idx_businesses_created_at")
  @@index([name(ops: raw("gin_trgm_ops"))], map: "idx_businesses_name_trgm", type: Gin)
  @@index([account_id, name, logo_url, business_website], map: "idx_businesses_profile")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model communication_records {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_id          String                @db.Uuid
  contact_id          String                @db.Uuid
  prompt_page_id      String?               @db.Uuid
  communication_type  String
  status              String                @default("draft")
  subject             String?
  message_content     String
  sent_at             DateTime?             @db.Timestamptz(6)
  created_at          DateTime              @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  updated_at          DateTime              @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  user_agent          String?
  ip_address          String?               @db.Inet
  accounts            accounts              @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  contacts            contacts              @relation(fields: [contact_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  prompt_pages        prompt_pages?         @relation(fields: [prompt_page_id], references: [id], onUpdate: NoAction)
  follow_up_reminders follow_up_reminders[]

  @@index([account_id], map: "idx_communication_records_account_id")
  @@index([contact_id], map: "idx_communication_records_contact_id")
  @@index([prompt_page_id], map: "idx_communication_records_prompt_page_id")
  @@index([sent_at], map: "idx_communication_records_sent_at")
  @@index([status], map: "idx_communication_records_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model communication_templates {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_id         String   @db.Uuid
  name               String
  communication_type String
  template_type      String
  subject_template   String?
  message_template   String
  is_default         Boolean? @default(false)
  is_active          Boolean? @default(true)
  created_at         DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  updated_at         DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  accounts           accounts @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([account_id, communication_type, template_type, is_default])
  @@index([account_id], map: "idx_communication_templates_account_id")
  @@index([communication_type, template_type], map: "idx_communication_templates_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model contacts {
  id                                                         String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_id                                                 String                  @db.Uuid
  first_name                                                 String
  last_name                                                  String?
  email                                                      String?
  phone                                                      String?
  category                                                   String?
  notes                                                      String?
  google_url                                                 String?
  yelp_url                                                   String?
  facebook_url                                               String?
  google_review                                              String?
  yelp_review                                                String?
  facebook_review                                            String?
  google_instructions                                        String?
  yelp_instructions                                          String?
  facebook_instructions                                      String?
  review_rewards                                             String?
  status                                                     String?                 @default("draft")
  created_at                                                 DateTime                @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  updated_at                                                 DateTime                @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  role                                                       String?
  address_line1                                              String?
  address_line2                                              String?
  city                                                       String?
  state                                                      String?
  postal_code                                                String?
  country                                                    String?
  business_name                                              String?
  imported_from_google                                       Boolean?                @default(false)
  google_reviewer_name                                       String?
  communication_records                                      communication_records[]
  users                                                      users                   @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  follow_up_reminders                                        follow_up_reminders[]
  prompt_pages                                               prompt_pages[]
  review_submissions_review_submissions_contact_idTocontacts review_submissions[]    @relation("review_submissions_contact_idTocontacts")

  @@index([account_id])
  @@index([email])
  @@index([phone])
  @@index([account_id, created_at(sort: Desc)], map: "idx_contacts_account_created")
  @@index([account_id], map: "idx_contacts_account_id")
  @@index([account_id], map: "idx_contacts_account_id_rls")
  @@index([business_name], map: "idx_contacts_business_name")
  @@index([category], map: "idx_contacts_category")
  @@index([city], map: "idx_contacts_city")
  @@index([country], map: "idx_contacts_country")
  @@index([created_at], map: "idx_contacts_created_at")
  @@index([email], map: "idx_contacts_email")
  @@index([imported_from_google], map: "idx_contacts_imported_from_google")
  @@index([city, state, country], map: "idx_contacts_location")
  @@index([phone], map: "idx_contacts_phone")
  @@index([postal_code], map: "idx_contacts_postal_code")
  @@index([state], map: "idx_contacts_state")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model critical_function_errors {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  function_name      String
  user_id            String?   @db.Uuid
  prompt_page_id     String?   @db.Uuid
  platform           String?
  error_message      String
  stack_trace        String?
  timestamp          DateTime  @default(now()) @db.Timestamptz(6)
  user_agent         String?
  url                String?
  additional_context Json?
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  users              users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([function_name, timestamp(sort: Desc)], map: "idx_critical_errors_function_time")
  @@index([prompt_page_id], map: "idx_critical_errors_prompt_page")
  @@index([user_id], map: "idx_critical_errors_user")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model critical_function_successes {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  function_name      String
  user_id            String?   @db.Uuid
  prompt_page_id     String?   @db.Uuid
  platform           String?
  duration           Int
  timestamp          DateTime  @default(now()) @db.Timestamptz(6)
  additional_context Json?
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  users              users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([function_name, timestamp(sort: Desc)], map: "idx_critical_successes_function_time")
  @@index([prompt_page_id], map: "idx_critical_successes_prompt_page")
  @@index([user_id], map: "idx_critical_successes_user")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model email_domain_policies {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_id  String?   @db.Uuid
  domain      String
  policy_type String
  is_active   Boolean?  @default(true)
  created_by  String?   @db.Uuid
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  accounts    accounts? @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users       users?    @relation(fields: [created_by], references: [id], onUpdate: NoAction)

  @@unique([account_id, domain, policy_type])
  @@index([account_id], map: "idx_email_domain_policies_account_id")
  @@index([domain], map: "idx_email_domain_policies_domain")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model email_templates {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String    @unique
  subject      String
  html_content String
  text_content String?
  is_active    Boolean?  @default(true)
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model feedback {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String?   @db.Uuid
  category   String
  message    String
  email      String?
  is_read    Boolean?  @default(false)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([category], map: "idx_feedback_category")
  @@index([created_at], map: "idx_feedback_created_at")
  @@index([is_read], map: "idx_feedback_is_read")
  @@index([user_id], map: "idx_feedback_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model follow_up_reminders {
  id                      String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  communication_record_id String                @db.Uuid
  account_id              String                @db.Uuid
  contact_id              String                @db.Uuid
  reminder_type           String
  reminder_date           DateTime              @db.Timestamptz(6)
  status                  String                @default("pending")
  custom_message          String?
  created_at              DateTime              @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  updated_at              DateTime              @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  accounts                accounts              @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  communication_records   communication_records @relation(fields: [communication_record_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  contacts                contacts              @relation(fields: [contact_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([account_id], map: "idx_follow_up_reminders_account_id")
  @@index([contact_id], map: "idx_follow_up_reminders_contact_id")
  @@index([reminder_date], map: "idx_follow_up_reminders_reminder_date")
  @@index([status], map: "idx_follow_up_reminders_status")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model game_leaderboard {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  player_name String    @db.VarChar(50)
  score       Int
  level       Int
  created_at  DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at(sort: Desc)], map: "idx_game_leaderboard_created_at")
  @@index([score(sort: Desc)], map: "idx_game_leaderboard_score")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model game_scores {
  id                BigInt    @id @default(autoincrement())
  player_handle     String
  email             String?
  score             Int
  level_reached     Int       @default(1)
  play_time_seconds Int?      @default(0)
  game_data         Json?     @default("{}")
  ip_address        String?   @db.Inet
  user_agent        String?
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  updated_at        DateTime? @default(now()) @db.Timestamptz(6)
  website           String?
  business_name     String?

  @@index([score(sort: Desc), created_at], map: "idx_game_scores_leaderboard")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model google_api_rate_limits {
  id               BigInt   @id @default(autoincrement())
  project_id       String   @unique
  last_api_call_at DateTime @default(now()) @db.Timestamptz(6)
  user_id          String?  @db.Uuid
  created_at       DateTime @default(now()) @db.Timestamptz(6)
  updated_at       DateTime @default(now()) @db.Timestamptz(6)
  users            users?   @relation(fields: [user_id], references: [id], onUpdate: NoAction)

  @@index([project_id], map: "idx_google_api_rate_limits_project_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model google_business_locations {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String    @db.Uuid
  location_id   String
  location_name String
  address       String?
  primary_phone String?
  website_uri   String?
  status        String?   @default("UNKNOWN")
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)
  account_name  String?
  users         users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, location_id])
  @@index([account_name], map: "idx_google_business_locations_account_name")
  @@index([location_id], map: "idx_google_business_locations_location_id")
  @@index([user_id], map: "idx_google_business_locations_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model google_business_media_uploads {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id           String    @db.Uuid
  location_id       String
  account_id        String
  file_name         String
  file_size         Int
  category          String?   @default("general")
  description       String?
  google_media_name String?
  upload_status     String?   @default("pending")
  error_message     String?
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  updated_at        DateTime? @default(now()) @db.Timestamptz(6)
  users             users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_google_business_media_uploads_created_at")
  @@index([location_id], map: "idx_google_business_media_uploads_location_id")
  @@index([user_id], map: "idx_google_business_media_uploads_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model google_business_profiles {
  id                    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id               String    @unique @db.Uuid
  access_token          String
  refresh_token         String?
  expires_at            DateTime  @db.Timestamptz(6)
  scopes                String?
  created_at            DateTime? @default(now()) @db.Timestamptz(6)
  updated_at            DateTime? @default(now()) @db.Timestamptz(6)
  google_email          String?
  selected_account_id   String?
  selected_account_name String?
  users                 users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id], map: "idx_google_business_profiles_user_id")
  @@index([google_email], map: "idx_google_business_profiles_google_email")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model invitation_events {
  id                  String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  invitation_id       String              @db.Uuid
  event_type          String
  event_data          Json?               @default("{}")
  user_agent          String?
  ip_address          String?             @db.Inet
  created_at          DateTime?           @default(now()) @db.Timestamptz(6)
  account_invitations account_invitations @relation(fields: [invitation_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_invitation_events_created_at")
  @@index([invitation_id], map: "idx_invitation_events_invitation_id")
  @@index([event_type, created_at], map: "idx_invitation_events_type_date")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model kickstarters {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  question   String
  category   String
  is_default Boolean?  @default(true)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)

  @@index([category], map: "idx_kickstarters_category")
  @@index([is_default], map: "idx_kickstarters_default")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model metadata_templates {
  id                           String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  page_type                    prompt_page_type
  title_template               String?
  description_template         String?
  og_title_template            String?
  og_description_template      String?
  og_image_template            String?
  twitter_title_template       String?
  twitter_description_template String?
  twitter_image_template       String?
  keywords_template            String?
  canonical_url_template       String?
  is_active                    Boolean?         @default(true)
  created_at                   DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at                   DateTime?        @default(now()) @db.Timestamptz(6)

  @@index([is_active], map: "idx_metadata_templates_active")
  @@index([page_type], map: "idx_metadata_templates_page_type")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model onboarding_tasks {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_id   String    @db.Uuid
  task_id      String
  completed    Boolean?  @default(false)
  completed_at DateTime? @db.Timestamptz(6)
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @default(now()) @db.Timestamptz(6)
  accounts     accounts  @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([account_id, task_id])
  @@index([account_id], map: "idx_onboarding_tasks_account_id")
  @@index([task_id], map: "idx_onboarding_tasks_task_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model prompt_pages {
  id                                                                       String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_id                                                               String                    @db.Uuid
  first_name                                                               String?
  last_name                                                                String?
  email                                                                    String?
  phone                                                                    String?
  client_name                                                              String?
  category                                                                 String?
  notes                                                                    String?
  google_url                                                               String?
  yelp_url                                                                 String?
  facebook_url                                                             String?
  review_platforms                                                         Json?
  services_offered                                                         Json?
  outcomes                                                                 Json?
  project_type                                                             String?
  offer_enabled                                                            Boolean?                  @default(false)
  offer_title                                                              String?                   @default("Special Offer")
  offer_body                                                               String?
  is_universal                                                             Boolean?                  @default(false)
  team_member                                                              String?
  location                                                                 String?
  tone_of_voice                                                            String?
  date_completed                                                           DateTime?                 @db.Timestamptz(6)
  assigned_team_members                                                    Json?
  qr_code_url                                                              String?
  created_at                                                               DateTime                  @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  updated_at                                                               DateTime                  @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  slug                                                                     String?                   @unique
  offer_url                                                                String?
  status                                                                   prompt_page_status?       @default(draft)
  offer_learn_more_url                                                     String?
  role                                                                     String?
  friendly_note                                                            String?
  falling_icon                                                             String?                   @default("star")
  review_type                                                              String?                   @default("review")
  no_platform_review_template                                              String?
  video_max_length                                                         Int?
  video_quality                                                            String?
  video_preset                                                             String?
  video_questions                                                          Json?
  video_note                                                               String?
  video_tips                                                               String?
  video_recipient                                                          String?
  emoji_sentiment_enabled                                                  Boolean?                  @default(false)
  emoji_sentiment_question                                                 String?
  emoji_feedback_message                                                   String?
  emoji_thank_you_message                                                  String?
  ai_button_enabled                                                        Boolean?                  @default(true)
  product_description                                                      String?
  features_or_benefits                                                     Json?
  product_name                                                             String?
  product_photo                                                            String?
  product_subcopy                                                          String?
  show_friendly_note                                                       Boolean                   @default(true)
  note_popup_enabled                                                       Boolean?                  @default(false)
  contact_id                                                               String?                   @db.Uuid
  business_location_id                                                     String?                   @db.Uuid
  emoji_labels                                                             String[]                  @default(["Excellent", "Satisfied", "Neutral", "Unsatisfied", "Frustrated"])
  ai_review_enabled                                                        Boolean?                  @default(true)
  falling_enabled                                                          Boolean?                  @default(true)
  emoji_feedback_popup_header                                              String?                   @default("How can we Improve?")
  emoji_feedback_page_header                                               String?                   @default("Your feedback helps us grow")
  nfc_text_enabled                                                         Boolean?                  @default(false)
  kickstarters_enabled                                                     Boolean?
  selected_kickstarters                                                    Json?
  kickstarters_background_design                                           Boolean?                  @default(false)
  fix_grammar_enabled                                                      Boolean?                  @default(true)
  falling_icon_color                                                       String?                   @default("#fbbf24")
  recent_reviews_enabled                                                   Boolean?                  @default(false)
  service_description                                                      String?
  service_name                                                             String?
  type                                                                     prompt_page_type?         @default(service)
  campaign_type                                                            prompt_page_campaign_type @default(individual)
  name                                                                     String?
  photo_context                                                            String?
  photo_description                                                        String?
  photo_upload_url                                                         String?
  photo_display_settings                                                   Json?                     @default("{}")
  instagram_url                                                            String?
  bluesky_url                                                              String?
  tiktok_url                                                               String?
  youtube_url                                                              String?
  linkedin_url                                                             String?
  pinterest_url                                                            String?
  visibility                                                               prompt_page_visibility?   @default(individual)
  ai_instructions                                                          String?
  recent_reviews_scope                                                     String?                   @default("current_page")
  emp_first_name                                                           String?
  emp_last_name                                                            String?
  emp_pronouns                                                             String?
  emp_headshot_url                                                         String?
  emp_position                                                             String?
  emp_location                                                             String?
  emp_years_at_business                                                    String?
  emp_bio                                                                  String?
  emp_fun_facts                                                            Json?
  emp_skills                                                               Json?
  emp_review_guidance                                                      String?
  eve_name                                                                 String?
  eve_type                                                                 String?
  eve_date                                                                 DateTime?                 @db.Date
  eve_location                                                             String?
  eve_description                                                          String?
  eve_duration                                                             String?
  eve_capacity                                                             Int?
  eve_organizer                                                            String?
  eve_special_features                                                     Json?
  eve_review_guidance                                                      String?
  offer_timelock                                                           Boolean?                  @default(false)
  custom_kickstarters                                                      Json?
  settings                                                                 Json?                     @default("{}")
  keywords                                                                 String[]                  @default([])
  analytics_events                                                         analytics_events[]
  business_locations_business_locations_prompt_page_idToprompt_pages       business_locations[]      @relation("business_locations_prompt_page_idToprompt_pages")
  communication_records                                                    communication_records[]
  users                                                                    accounts                  @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  business_locations_prompt_pages_business_location_idTobusiness_locations business_locations?       @relation("prompt_pages_business_location_idTobusiness_locations", fields: [business_location_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  contacts                                                                 contacts?                 @relation(fields: [contact_id], references: [id], onUpdate: NoAction)
  review_submissions                                                       review_submissions[]

  @@index([account_id], map: "idx_prompt_pages_account_id")
  @@index([account_id, status], map: "idx_prompt_pages_account_status")
  @@index([account_id, type], map: "idx_prompt_pages_account_type")
  @@index([account_id, is_universal], map: "idx_prompt_pages_account_universal")
  @@index([campaign_type], map: "idx_prompt_pages_campaign_type")
  @@index([created_at], map: "idx_prompt_pages_created_at")
  @@index([account_id, is_universal, status, created_at(sort: Desc), slug, type, review_type, campaign_type], map: "idx_prompt_pages_dashboard")
  @@index([emp_location], map: "idx_prompt_pages_emp_location")
  @@index([emp_position], map: "idx_prompt_pages_emp_position")
  @@index([eve_date], map: "idx_prompt_pages_eve_date")
  @@index([eve_location], map: "idx_prompt_pages_eve_location")
  @@index([eve_type], map: "idx_prompt_pages_eve_type")
  @@index([business_location_id], map: "idx_prompt_pages_location")
  @@index([photo_context], map: "idx_prompt_pages_photo_context")
  @@index([photo_description], map: "idx_prompt_pages_photo_description")
  @@index([recent_reviews_scope], map: "idx_prompt_pages_recent_reviews_scope")
  @@index([service_description], map: "idx_prompt_pages_service_description")
  @@index([service_name], map: "idx_prompt_pages_service_name")
  @@index([slug], map: "idx_prompt_pages_slug")
  @@index([status], map: "idx_prompt_pages_status")
  @@index([type], map: "idx_prompt_pages_type")
  @@index([type, status, created_at(sort: Desc)], map: "idx_prompt_pages_type_status")
  @@index([type, visibility], map: "idx_prompt_pages_type_visibility")
  @@index([visibility], map: "idx_prompt_pages_visibility")
  @@index([account_id])
  @@index([contact_id])
  @@index([email])
  @@index([phone])
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model quotes {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  text        String
  author      String?
  is_active   Boolean?  @default(true)
  created_by  String?   @db.Uuid
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  button_text String?
  button_url  String?
  users       users?    @relation(fields: [created_by], references: [id], onUpdate: NoAction)

  @@index([is_active], map: "idx_quotes_active")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model review_drafts {
  id                 String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  prompt_page_id     String?   @db.Uuid
  platform           String?
  review_text        String?
  regeneration_count Int?      @default(0)
  created_at         DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_review_drafts_created_at")
  @@index([platform], map: "idx_review_drafts_platform")
  @@index([prompt_page_id], map: "idx_review_drafts_prompt_page_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model review_reminder_logs {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String?   @db.Uuid
  account_id    String?   @db.Uuid
  location_id   String?
  review_ids    String[]
  reminder_type String?   @default("monthly_review")
  sent_at       DateTime? @default(now()) @db.Timestamp(6)
  success       Boolean?
  error_message String?
  email_sent_to String?
  review_count  Int?      @default(0)
  accounts      accounts? @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users         users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([account_id], map: "idx_review_reminder_logs_account_id")
  @@index([sent_at], map: "idx_review_reminder_logs_sent_at")
  @@index([user_id], map: "idx_review_reminder_logs_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model review_reminder_settings {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id            String?   @unique @db.Uuid
  enabled            Boolean?  @default(true)
  frequency          String?   @default("monthly")
  last_reminder_sent DateTime? @db.Timestamp(6)
  last_review_check  DateTime? @db.Timestamp(6)
  created_at         DateTime? @default(now()) @db.Timestamp(6)
  updated_at         DateTime? @default(now()) @db.Timestamp(6)
  users              users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id], map: "idx_review_reminder_settings_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model review_submissions {
  id                                               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  prompt_page_id                                   String?       @db.Uuid
  platform                                         String
  submitted_at                                     DateTime?     @default(now()) @db.Timestamptz(6)
  status                                           String
  user_agent                                       String?
  ip_address                                       String?
  created_at                                       DateTime?     @default(now()) @db.Timestamptz(6)
  reviewer_name                                    String?
  reviewer_role                                    String?
  review_content                                   String?
  review_group_id                                  String?       @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  photo_url                                        String?
  emoji_sentiment_selection                        String?       @db.VarChar(32)
  first_name                                       String?       @db.VarChar(100)
  last_name                                        String?       @db.VarChar(100)
  email                                            String?       @db.VarChar(255)
  phone                                            String?       @db.VarChar(50)
  prompt_page_type                                 String?
  review_type                                      String?
  verified                                         Boolean?      @default(false)
  verified_at                                      DateTime?     @db.Timestamptz(6)
  platform_url                                     String?
  business_id                                      String?       @db.Uuid
  google_review_id                                 String?
  imported_from_google                             Boolean?      @default(false)
  star_rating                                      Int?
  contact_id                                       String?       @db.Uuid
  account_id                                       String?       @db.Uuid
  businesses                                       businesses?   @relation(fields: [business_id], references: [id], onUpdate: NoAction, map: "fk_review_submissions_business_id")
  contacts_review_submissions_contact_idTocontacts contacts?     @relation("review_submissions_contact_idTocontacts", fields: [contact_id], references: [id], onUpdate: NoAction, map: "fk_review_submissions_contact_id")
  prompt_pages                                     prompt_pages? @relation(fields: [prompt_page_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([business_id], map: "idx_review_submissions_business_id")
  @@index([contact_id], map: "idx_review_submissions_contact_id")
  @@index([created_at], map: "idx_review_submissions_created_at")
  @@index([email], map: "idx_review_submissions_email")
  @@index([google_review_id], map: "idx_review_submissions_google_review_id")
  @@index([review_group_id], map: "idx_review_submissions_group_id")
  @@index([imported_from_google], map: "idx_review_submissions_imported_from_google")
  @@index([prompt_page_id, platform], map: "idx_review_submissions_page_platform")
  @@index([platform], map: "idx_review_submissions_platform")
  @@index([prompt_page_id], map: "idx_review_submissions_prompt_page_id")
  @@index([review_type], map: "idx_review_submissions_review_type")
  @@index([star_rating], map: "idx_review_submissions_star_rating")
  @@index([submitted_at], map: "idx_review_submissions_submitted_at")
  @@index([verified], map: "idx_review_submissions_verified")
  @@index([account_id], map: "idx_review_submissions_account_id")
  @@index([account_id, status, created_at(sort: Desc)], map: "idx_review_submissions_account_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model trial_reminder_logs {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_id    String    @db.Uuid
  email         String
  reminder_type String
  sent_at       DateTime? @default(now()) @db.Timestamptz(6)
  success       Boolean
  error_message String?
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  accounts      accounts  @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([account_id], map: "idx_trial_reminder_logs_account_id")
  @@index([reminder_type], map: "idx_trial_reminder_logs_reminder_type")
  @@index([sent_at], map: "idx_trial_reminder_logs_sent_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model widget_reviews {
  id                        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  widget_id                 String    @db.Uuid
  review_id                 String?   @db.Uuid
  first_name                String?
  last_name                 String?
  reviewer_role             String?
  review_content            String
  star_rating               Decimal?  @default(5) @db.Decimal(2, 1)
  platform                  String?
  created_at                DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                DateTime? @default(now()) @db.Timestamptz(6)
  order_index               Int?
  emoji_sentiment_selection String?   @db.VarChar(32)
  email                     String?   @db.VarChar(255)
  phone                     String?   @db.VarChar(50)
  prompt_page_type          String?
  review_type               String?
  verified                  Boolean?  @default(false)
  verified_at               DateTime? @db.Timestamptz(6)
  platform_url              String?
  business_id               String?   @db.Uuid
  submitted_at              DateTime? @default(now()) @db.Timestamptz(6)
  status                    String?   @default("submitted")
  user_agent                String?
  ip_address                String?
  review_group_id           String?   @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  photo_url                 String?
  widgets                   widgets   @relation(fields: [widget_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([business_id], map: "idx_widget_reviews_business_id")
  @@index([created_at], map: "idx_widget_reviews_created_at")
  @@index([order_index], map: "idx_widget_reviews_order_index")
  @@index([photo_url], map: "idx_widget_reviews_photo_url")
  @@index([review_group_id], map: "idx_widget_reviews_review_group_id")
  @@index([review_id], map: "idx_widget_reviews_review_id")
  @@index([review_type], map: "idx_widget_reviews_review_type")
  @@index([star_rating], map: "idx_widget_reviews_star_rating")
  @@index([verified], map: "idx_widget_reviews_verified")
  @@index([widget_id], map: "idx_widget_reviews_widget_id")
  @@index([widget_id, verified], map: "idx_widget_reviews_widget_verified")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model widgets {
  id                     String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_id             String           @db.Uuid
  type                   String
  created_at             DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?        @default(now()) @db.Timestamptz(6)
  theme                  Json?            @default("{}")
  review_count           Int?             @default(5)
  widget_type            String?          @default("multi")
  submit_reviews_enabled Boolean          @default(true)
  config                 Json?            @default("{}")
  is_active              Boolean?         @default(true)
  name                   String
  widget_reviews         widget_reviews[]
  accounts               accounts         @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([account_id], map: "idx_widgets_account_id")
  @@index([account_id, type, created_at(sort: Desc)], map: "idx_widgets_account_type")
  @@index([is_active], map: "idx_widgets_is_active")
  @@index([review_count], map: "idx_widgets_review_count")
  @@index([submit_reviews_enabled], map: "idx_widgets_submit_reviews_enabled")
  @@index([theme], map: "idx_widgets_theme", type: Gin)
  @@index([type], map: "idx_widgets_type")
  @@index([widget_type], map: "idx_widgets_widget_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model billing_audit_log {
  id                     String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at             DateTime? @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  account_id             String    @db.Uuid
  user_id                String?   @db.Uuid
  event_type             String    @db.VarChar(50)
  event_source           String    @db.VarChar(20)
  description            String
  metadata               Json?
  stripe_event_id        String?   @db.VarChar(255)
  stripe_customer_id     String?   @db.VarChar(255)
  stripe_subscription_id String?   @db.VarChar(255)
  old_plan               String?   @db.VarChar(50)
  new_plan               String?   @db.VarChar(50)
  old_billing_period     String?   @db.VarChar(20)
  new_billing_period     String?   @db.VarChar(20)
  amount                 Int?
  currency               String?   @db.VarChar(3)
  error_message          String?
  ip_address             String?   @db.Inet
  user_agent             String?
  accounts               accounts  @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users                  users?    @relation(fields: [user_id], references: [id], onUpdate: NoAction)

  @@index([account_id], map: "idx_billing_audit_account_id")
  @@index([created_at], map: "idx_billing_audit_created_at")
  @@index([event_type], map: "idx_billing_audit_event_type")
  @@index([stripe_customer_id], map: "idx_billing_audit_stripe_customer")
  @@index([stripe_subscription_id], map: "idx_billing_audit_stripe_subscription")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model selected_gbp_locations {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_id          String    @db.Uuid
  user_id             String    @db.Uuid
  location_id         String
  location_name       String
  address             String?
  selected_at         DateTime? @default(now()) @db.Timestamptz(6)
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  updated_at          DateTime? @default(now()) @db.Timestamptz(6)
  include_in_insights Boolean?  @default(true)
  accounts            accounts  @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users               users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([account_id, location_id])
  @@index([account_id], map: "idx_selected_gbp_locations_account_id")
  @@index([user_id], map: "idx_selected_gbp_locations_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model oauth_clients {
  id                 String                  @id @db.Uuid
  client_id          String                  @unique
  client_secret_hash String
  registration_type  oauth_registration_type
  redirect_uris      String
  grant_types        String
  client_name        String?
  client_uri         String?
  logo_uri           String?
  created_at         DateTime                @default(now()) @db.Timestamptz(6)
  updated_at         DateTime                @default(now()) @db.Timestamptz(6)
  deleted_at         DateTime?               @db.Timestamptz(6)

  @@index([client_id])
  @@index([deleted_at])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model google_business_scheduled_post_results {
  id                              String                                       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  scheduled_post_id               String                                       @db.Uuid
  location_id                     String
  location_name                   String?
  status                          google_business_scheduled_post_result_status @default(pending)
  published_at                    DateTime?                                    @db.Timestamptz(6)
  error_message                   String?
  google_resource_id              String?
  created_at                      DateTime                                     @default(now()) @db.Timestamptz(6)
  updated_at                      DateTime                                     @default(now()) @db.Timestamptz(6)
  google_business_scheduled_posts google_business_scheduled_posts              @relation(fields: [scheduled_post_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([location_id], map: "idx_google_business_scheduled_post_results_location")
  @@index([scheduled_post_id], map: "idx_google_business_scheduled_post_results_post")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model google_business_scheduled_posts {
  id                                     String                                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_id                             String                                   @db.Uuid
  user_id                                String                                   @db.Uuid
  post_kind                              google_business_scheduled_post_kind      @default(post)
  post_type                              String?
  content                                Json?
  caption                                String?
  scheduled_date                         DateTime                                 @db.Date
  timezone                               String
  selected_locations                     Json                                     @default("[]")
  media_paths                            Json                                     @default("[]")
  status                                 google_business_scheduled_post_status    @default(pending)
  published_at                           DateTime?                                @db.Timestamptz(6)
  error_log                              Json?
  created_at                             DateTime                                 @default(now()) @db.Timestamptz(6)
  updated_at                             DateTime                                 @default(now()) @db.Timestamptz(6)
  google_business_scheduled_post_results google_business_scheduled_post_results[]
  accounts                               accounts                                 @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users                                  users                                    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([account_id], map: "idx_google_business_scheduled_posts_account")
  @@index([status, scheduled_date], map: "idx_google_business_scheduled_posts_status_date")
  @@index([user_id], map: "idx_google_business_scheduled_posts_user")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model review_share_images {
  id           String   @id
  review_id    String   @db.Uuid
  account_id   String   @db.Uuid
  image_url    String
  storage_path String
  image_type   String   @default("quote_card")
  generated_at DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  created_at   DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  updated_at   DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  accounts     accounts @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([review_id], map: "idx_review_share_images_review_id")
  @@index([account_id], map: "idx_review_share_images_account_id")
  @@index([generated_at], map: "idx_review_share_images_generated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model article_contexts {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  article_id    String   @db.Uuid
  route_pattern String
  keywords      String[] @default([])
  priority      Int?     @default(50)
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  articles      articles @relation(fields: [article_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([article_id, route_pattern], map: "unique_article_route")
  @@index([article_id], map: "idx_article_contexts_article_id")
  @@index([keywords], map: "idx_article_contexts_keywords", type: Gin)
  @@index([priority(sort: Desc)], map: "idx_article_contexts_priority")
  @@index([route_pattern], map: "idx_article_contexts_route")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model article_revisions {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  article_id     String   @db.Uuid
  content        String
  metadata       Json?    @default("{}")
  editor_id      String?  @db.Uuid
  change_summary String?
  created_at     DateTime @default(now()) @db.Timestamptz(6)
  articles       articles @relation(fields: [article_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users          users?   @relation(fields: [editor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([article_id], map: "idx_article_revisions_article_id")
  @@index([created_at(sort: Desc)], map: "idx_article_revisions_created_at")
  @@index([editor_id], map: "idx_article_revisions_editor_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model articles {
  id                               String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  slug                             String              @unique
  title                            String
  content                          String
  metadata                         Json?               @default("{}")
  status                           String?             @default("draft")
  published_at                     DateTime?           @db.Timestamptz(6)
  created_at                       DateTime            @default(now()) @db.Timestamptz(6)
  updated_at                       DateTime            @default(now()) @db.Timestamptz(6)
  created_by                       String?             @db.Uuid
  updated_by                       String?             @db.Uuid
  article_contexts                 article_contexts[]
  article_revisions                article_revisions[]
  users_articles_created_byTousers users?              @relation("articles_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_articles_updated_byTousers users?              @relation("articles_updated_byTousers", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  faqs                             faqs[]
  media_assets                     media_assets[]

  @@index([created_at(sort: Desc)], map: "idx_articles_created_at")
  @@index([published_at(sort: Desc)], map: "idx_articles_published_at")
  @@index([slug], map: "idx_articles_slug")
  @@index([status], map: "idx_articles_status")
  @@index([updated_at(sort: Desc)], map: "idx_articles_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model channels {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  slug        String    @unique
  name        String
  description String?
  icon        String?
  sort_order  Int?      @default(0)
  is_active   Boolean?  @default(true)
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  posts       posts[]

  @@index([slug], map: "idx_channels_slug")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model comment_reactions {
  comment_id    String        @db.Uuid
  user_id       String        @db.Uuid
  reaction      String
  created_at    DateTime?     @default(now()) @db.Timestamptz(6)
  post_comments post_comments @relation(fields: [comment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users         users         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([comment_id, user_id, reaction])
  @@index([comment_id], map: "idx_comment_reactions_comment")
  @@index([user_id], map: "idx_comment_reactions_user")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model community_profiles {
  user_id               String    @id @db.Uuid
  username              String    @unique
  display_name_override String?
  opted_in_at           DateTime? @db.Timestamptz(6)
  guidelines_ack_at     DateTime? @db.Timestamptz(6)
  created_at            DateTime? @default(now()) @db.Timestamptz(6)
  updated_at            DateTime? @default(now()) @db.Timestamptz(6)
  users                 users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([username], map: "idx_community_profiles_username")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model faqs {
  id                           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  question                     String
  answer                       String
  category                     String
  plans                        String[]  @default(["grower", "builder", "maven", "enterprise"])
  order_index                  Int?      @default(0)
  article_id                   String?   @db.Uuid
  created_at                   DateTime  @default(now()) @db.Timestamptz(6)
  updated_at                   DateTime  @default(now()) @db.Timestamptz(6)
  created_by                   String?   @db.Uuid
  updated_by                   String?   @db.Uuid
  articles                     articles? @relation(fields: [article_id], references: [id], onUpdate: NoAction)
  users_faqs_created_byTousers users?    @relation("faqs_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_faqs_updated_byTousers users?    @relation("faqs_updated_byTousers", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([article_id], map: "idx_faqs_article_id")
  @@index([category], map: "idx_faqs_category")
  @@index([category, order_index], map: "idx_faqs_order")
  @@index([plans], map: "idx_faqs_plans", type: Gin)
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model media_assets {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  filename    String
  url         String
  mime_type   String?
  size_bytes  BigInt?
  alt_text    String?
  caption     String?
  article_id  String?   @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  uploaded_by String?   @db.Uuid
  articles    articles? @relation(fields: [article_id], references: [id], onUpdate: NoAction)
  users       users?    @relation(fields: [uploaded_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([article_id], map: "idx_media_assets_article_id")
  @@index([created_at(sort: Desc)], map: "idx_media_assets_created_at")
  @@index([mime_type], map: "idx_media_assets_mime_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mentions {
  id                                      String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  source_type                             String
  source_id                               String    @db.Uuid
  mentioned_user_id                       String    @db.Uuid
  author_id                               String    @db.Uuid
  created_at                              DateTime? @default(now()) @db.Timestamptz(6)
  read_at                                 DateTime? @db.Timestamptz(6)
  users_mentions_author_idTousers         users     @relation("mentions_author_idTousers", fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_mentions_mentioned_user_idTousers users     @relation("mentions_mentioned_user_idTousers", fields: [mentioned_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([source_type, source_id], map: "idx_mentions_source")
  @@index([mentioned_user_id, read_at], map: "idx_mentions_user_read")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an index with non-default null sort order and requires additional setup for migrations. Visit https://pris.ly/d/default-index-null-ordering for more info.
model navigation {
  id               String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  parent_id        String?      @db.Uuid
  title            String
  href             String?
  icon_name        String?
  order_index      Int?         @default(0)
  visibility       String[]     @default(["docs", "help"])
  is_active        Boolean?     @default(true)
  created_at       DateTime     @default(now()) @db.Timestamptz(6)
  updated_at       DateTime     @default(now()) @db.Timestamptz(6)
  navigation       navigation?  @relation("navigationTonavigation", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  other_navigation navigation[] @relation("navigationTonavigation")

  @@index([is_active], map: "idx_navigation_is_active")
  @@index([parent_id, order_index], map: "idx_navigation_order")
  @@index([parent_id], map: "idx_navigation_parent_id")
  @@index([visibility], map: "idx_navigation_visibility", type: Gin)
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model optimizer_email_sends {
  id              String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  lead_id         String          @db.Uuid
  email_type      String          @db.VarChar(50)
  sent_at         DateTime        @default(now()) @db.Timestamptz(6)
  success         Boolean         @default(false)
  error_message   String?
  created_at      DateTime        @default(now()) @db.Timestamptz(6)
  optimizer_leads optimizer_leads @relation(fields: [lead_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([email_type], map: "idx_optimizer_email_sends_email_type")
  @@index([lead_id], map: "idx_optimizer_email_sends_lead_id")
  @@index([sent_at(sort: Desc)], map: "idx_optimizer_email_sends_sent_at")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model optimizer_leads {
  id                       String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                    String                  @db.VarChar(255)
  business_name            String?
  google_maps_url          String?
  source_business          String?                 @default("promptreviews") @db.VarChar(100)
  source_domain            String?                 @db.VarChar(255)
  lead_segment             String?                 @db.VarChar(50)
  business_size            String?                 @db.VarChar(50)
  industry                 String?                 @db.VarChar(80)
  utm_source               String?                 @db.VarChar(100)
  utm_medium               String?                 @db.VarChar(100)
  utm_campaign             String?                 @db.VarChar(100)
  referrer_url             String?
  lead_score               Int?
  lead_status              String?                 @default("new") @db.VarChar(50)
  created_at               DateTime                @default(now()) @db.Timestamptz(6)
  updated_at               DateTime                @default(now()) @db.Timestamptz(6)
  last_analysis_date       DateTime?               @db.Timestamptz(6)
  pdf_downloaded           Boolean?                @default(false)
  pdf_download_date        DateTime?               @db.Timestamptz(6)
  signed_up_for_trial      Boolean?                @default(false)
  trial_start_date         DateTime?               @db.Timestamptz(6)
  converted_to_customer    Boolean?                @default(false)
  customer_conversion_date DateTime?               @db.Timestamptz(6)
  google_account_email     String?                 @db.VarChar(255)
  place_id                 String?                 @db.VarChar(255)
  location_name            String?
  location_address         String?
  email_unsubscribed       Boolean?                @default(false)
  email_unsubscribed_at    DateTime?               @db.Timestamptz(6)
  optimizer_email_sends    optimizer_email_sends[]
  optimizer_sessions       optimizer_sessions[]

  @@unique([email, source_business], map: "idx_optimizer_leads_email_source")
  @@index([converted_to_customer], map: "idx_optimizer_leads_converted")
  @@index([created_at(sort: Desc)], map: "idx_optimizer_leads_created_at")
  @@index([email_unsubscribed], map: "idx_optimizer_leads_email_unsubscribed")
  @@index([lead_segment], map: "idx_optimizer_leads_lead_segment")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model optimizer_sessions {
  id                          String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  session_token_hash          String           @unique @db.Char(64)
  session_scope               Json?            @default("{}")
  session_key_version         String?          @default("v1") @db.VarChar(32)
  email                       String?          @db.VarChar(255)
  lead_id                     String?          @db.Uuid
  google_access_token_cipher  String?
  google_refresh_token_cipher String?
  google_token_iv             String?
  google_token_key_version    String?          @db.VarChar(32)
  google_token_expires_at     DateTime?        @db.Timestamptz(6)
  api_calls_count             Int?             @default(0)
  last_api_call_at            DateTime?        @db.Timestamptz(6)
  created_at                  DateTime         @default(now()) @db.Timestamptz(6)
  expires_at                  DateTime         @default(dbgenerated("(now() + '00:45:00'::interval)")) @db.Timestamptz(6)
  optimizer_leads             optimizer_leads? @relation(fields: [lead_id], references: [id], onUpdate: NoAction)

  @@index([email], map: "idx_optimizer_sessions_email")
  @@index([expires_at], map: "idx_optimizer_sessions_expires_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model post_comments {
  id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  post_id           String              @db.Uuid
  author_id         String              @db.Uuid
  body              String
  created_at        DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?           @default(now()) @db.Timestamptz(6)
  deleted_at        DateTime?           @db.Timestamptz(6)
  comment_reactions comment_reactions[]
  users             users               @relation(fields: [author_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  posts             posts               @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model post_reactions {
  post_id    String    @db.Uuid
  user_id    String    @db.Uuid
  reaction   String
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  posts      posts     @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([post_id, user_id, reaction])
  @@index([post_id], map: "idx_post_reactions_post")
  @@index([user_id], map: "idx_post_reactions_user")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model posts {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  channel_id     String           @db.Uuid
  author_id      String           @db.Uuid
  title          String
  body           String?
  external_url   String?
  created_at     DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at     DateTime?        @default(now()) @db.Timestamptz(6)
  deleted_at     DateTime?        @db.Timestamptz(6)
  post_comments  post_comments[]
  post_reactions post_reactions[]
  users          users            @relation(fields: [author_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  channels       channels         @relation(fields: [channel_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model review_share_events {
  id         String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  review_id  String         @db.Uuid
  account_id String         @db.Uuid
  user_id    String         @db.Uuid
  platform   share_platform
  timestamp  DateTime       @default(now()) @db.Timestamptz(6)
  created_at DateTime       @default(now()) @db.Timestamptz(6)
  updated_at DateTime       @default(now()) @db.Timestamptz(6)
  accounts   accounts       @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([account_id], map: "idx_review_share_events_account_id")
  @@index([account_id, platform], map: "idx_review_share_events_account_platform")
  @@index([platform], map: "idx_review_share_events_platform")
  @@index([review_id], map: "idx_review_share_events_review_id")
  @@index([review_id, platform], map: "idx_review_share_events_review_platform")
  @@index([timestamp(sort: Desc)], map: "idx_review_share_events_timestamp")
  @@index([user_id], map: "idx_review_share_events_user_id")
  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}

enum prompt_page_campaign_type {
  public
  individual
  universal
  location

  @@schema("public")
}

enum prompt_page_status {
  in_queue
  sent
  follow_up
  in_progress
  complete
  draft

  @@schema("public")
}

enum prompt_page_type {
  universal
  photo
  product
  service
  video
  event
  employee
  custom
  individual

  @@schema("public")
}

enum prompt_page_visibility {
  public
  individual

  @@schema("public")
}

enum oauth_registration_type {
  dynamic
  manual

  @@schema("auth")
}

enum google_business_scheduled_post_kind {
  post
  photo

  @@schema("public")
}

enum google_business_scheduled_post_result_status {
  pending
  processing
  success
  failed

  @@schema("public")
}

enum google_business_scheduled_post_status {
  pending
  processing
  completed
  partial_success
  failed
  cancelled

  @@schema("public")
}

/// This enum is commented in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
enum share_platform {
  facebook
  linkedin
  twitter
  bluesky
  reddit
  pinterest
  email
  text
  copy_link
  sms

  @@schema("public")
}
